<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">


		<context:property-placeholder location="classpath:application.properties" file-encoding="UTF-8"/>
	


		<!-- 커넥션풀을 쓸 수 있는 클래스
			이렇게 빈으로 등록해주면 스프링이 이 객체가 필요할 때 만들어서 준다. -->
		<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driverClassName}"/>
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>
		</bean>		 
 		  
	  <!-- 파일업로드 관련 빈등록 -->
	  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	  	<property name="maxUploadSize" value="100000000"/>
	  	<property name="maxInMemorySize" value="100000000"/>
	  </bean>
	  
	  <!-- @Aspect 및 하위어노테이션 활성화 -->
	  <aop:aspectj-autoproxy />
	  
	  <!-- @Aspect 어노테이션도 scan 하기 위함 -->
	  <context:component-scan base-package="com.kh" use-default-filters="false">
	  	<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
	  </context:component-scan>
	  
	  <!-- 실제 만드나 빈에 등록해서 가져오나 동일하다 -->
	  <bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> <!-- 임포트문 가져와서 넣으쇼 -->
	  	<property name="host" value="${mail.smtp.host}"/>
	  	<property name="port" value="${mail.smtp.port}"/>
	  	<property name="username" value="${mail.smtp.username}"/>
	  	<property name="password" value="${mail.smtp.password}"/><!-- 구글에서 받은 키값 넣으쇼 -->
	  	<property name="javaMailProperties">
	  		<props>
	  			<prop key="mail.smtp.auth">${mail.smtp.auth}</prop> 
	  			<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
	  		</props>
	  	</property> 
	  </bean>
	
	 
	 
	 
</beans>
